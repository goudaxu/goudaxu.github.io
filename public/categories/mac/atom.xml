<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>Gouda&#x27;s Blog - mac</title>
	<subtitle>A simple blog by Gouda</subtitle>
	<link href="https://www.xuhaoda.com/categories/mac/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://www.xuhaoda.com"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2021-12-04T00:00:00+00:00</updated>
	<id>https://www.xuhaoda.com/categories/mac/atom.xml</id>
	<entry xml:lang="en">
		<title>MACOS临时禁用IPv6</title>
		<published>2021-12-04T00:00:00+00:00</published>
		<updated>2021-12-04T00:00:00+00:00</updated>
		<link href="https://www.xuhaoda.com/linux/mac-osjin-yong-lin-shi-ipv6/" type="text/html"/>
		<id>https://www.xuhaoda.com/linux/mac-osjin-yong-lin-shi-ipv6/</id>
		<content type="html">&lt;h1 id=&quot;mac-os-jin-yong-lin-shi-ipv6&quot;&gt;MAC OS 禁用临时ipv6&lt;&#x2F;h1&gt;
&lt;p&gt;Macos 可以通过对 sysctl.conf 进行修改从而达到禁用 IPv6 临时地址的问题，具体操作方法如下：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sysctl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; -w&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; net.inet6.ip6.use_tempaddr=0 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5f697a;&quot;&gt;#但是重启后会失效
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;如果想重启不失效手动编辑或创建 &lt;code&gt;&#x2F;etc&#x2F;sysctl.conf&lt;&#x2F;code&gt;文件并添加下列内容&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;sysctl -w net.inet6.ip6.use_tempaddr = 0&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;由于 conf 文件的规则，最后一行需要是空行，多个换行符即多敲一个回车&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>shell中!感叹号的妙用</title>
		<published>2021-12-04T00:00:00+00:00</published>
		<updated>2021-12-04T00:00:00+00:00</updated>
		<link href="https://www.xuhaoda.com/linux/shellzhong-gan-tan-hao-de-miao-yong/" type="text/html"/>
		<id>https://www.xuhaoda.com/linux/shellzhong-gan-tan-hao-de-miao-yong/</id>
		<content type="html">&lt;p&gt;整天在shell环境下操作，不积累点快捷输入的小技巧是不行的。&lt;&#x2F;p&gt;
&lt;p&gt;最常用的技巧恐怕就是Tab自动补全以及上方向键来回退上几条历史命令了，这些对于csh，bash，ksh，zsh都适用。&lt;&#x2F;p&gt;
&lt;p&gt;! 符号在 Linux 中不但可以用作否定符号，还可以用来从历史命令记录中取出命令或不加修改的执行之前运行的命令。下面的所有命令都已经在 Bash Shell 中经过确切地检验。尽管我没有试过，但大多都不能在别的 Shell 中运行。这里我们介绍下 Linux 命令行中符号 ! 那惊人和奇妙的用法。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;执行上一条命令&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;例如，在执行完上面一条命令后，可以使用下面的方式再次执行上一条命令：&lt;&#x2F;p&gt;
&lt;p&gt;$ whereis bash #执行命令&lt;&#x2F;p&gt;
&lt;p&gt;bash: &#x2F;bin&#x2F;bash &#x2F;etc&#x2F;bash.bashrc&lt;&#x2F;p&gt;
&lt;p&gt;$ !! #再次执行上一条命令&lt;&#x2F;p&gt;
&lt;p&gt;whereis bash&lt;&#x2F;p&gt;
&lt;p&gt;bash: &#x2F;bin&#x2F;bash &#x2F;etc&#x2F;bash.bashrc&lt;&#x2F;p&gt;
&lt;p&gt;!!代表了上一条执行的命令。可以看到，当输入两个感叹号时，它显示上条命令的同时会执行上一条命令。当然了，通常我们还会想到使用“UP”键来完成这个事情。但是如果是基于上条命令扩充，!!就来得更加方便了。&lt;&#x2F;p&gt;
&lt;p&gt;比如，你想查看某个文件，但是忘了输入more：&lt;&#x2F;p&gt;
&lt;p&gt;$ &#x2F;opt&#x2F;user&#x2F;test.txt #忘记输入more&lt;&#x2F;p&gt;
&lt;p&gt;$ more !! #这样是不是快多了？&lt;&#x2F;p&gt;
&lt;p&gt;使用!!是不是方便多了？&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;使用上个命令第一个或最后一个的参数执行命令&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;使用上条命令最后一个参数&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;比如，你在使用ls列出目录内容时，没有带任何参数，但是想再次执行，带上-al参数，又不想输入长长的参数，可以使用下面的方式：&lt;&#x2F;p&gt;
&lt;p&gt;$ ls &#x2F;etc&#x2F;udev&lt;&#x2F;p&gt;
&lt;p&gt;&#x2F;etc&#x2F;udev&lt;&#x2F;p&gt;
&lt;p&gt;$ ls -al !$&lt;&#x2F;p&gt;
&lt;p&gt;ls -al &#x2F;etc&#x2F;udev&lt;&#x2F;p&gt;
&lt;p&gt;-r--r--r-- 1 root root 0 Jan 20 09:30 &#x2F;etc&#x2F;udev&lt;&#x2F;p&gt;
&lt;p&gt;这里的!$代表了上一条命令的最后一个参数。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;使用上条命令第一个参数&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;而使用上条命令的第一个参数只需要使用!^，例如：&lt;&#x2F;p&gt;
&lt;p&gt;$ ls -al !^&lt;&#x2F;p&gt;
&lt;p&gt;去掉最后一个参数执行上一个命令&lt;&#x2F;p&gt;
&lt;p&gt;如果想执行上条命令，但不想带上最后一个参数：&lt;&#x2F;p&gt;
&lt;p&gt;$ ls -al dir #假设dir是一个很长的字符串&lt;&#x2F;p&gt;
&lt;p&gt;$ !:-&lt;&#x2F;p&gt;
&lt;p&gt;ls -al&lt;&#x2F;p&gt;
&lt;p&gt;什么场景下可能会用呢？比如你上一条命令最后一个参数是一个长长的字符串，而你恰好不想不用它，并且退格键删除又慢的时候，可以使用上面的方法。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;使用上条命令的所有参数&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;前面说了使用上条命令的最后一个参数，那如果不是最后一个参数，该如何使用呢？很简单，使用!*即可。例如我们在输入find命令输错了，想要纠正的时候：&lt;&#x2F;p&gt;
&lt;p&gt;$ finsd -name &amp;quot;foo.zip&amp;quot; # 这里特意输错了find命令&lt;&#x2F;p&gt;
&lt;p&gt;$ find !*&lt;&#x2F;p&gt;
&lt;p&gt;find .&#x2F; -name &amp;quot;foo.zip&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;.&#x2F;bar&#x2F;foo.zip&lt;&#x2F;p&gt;
&lt;p&gt;.&#x2F;data&#x2F;py&#x2F;foo.zip&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;使用上条命令指定的参数&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;有的读者可能会问了，如果我只想用其中某个参数呢？按照![命令名]:[参数号]的规则即可。例如：&lt;&#x2F;p&gt;
&lt;p&gt;$ cp -rf dira dirb&#x2F; #将dira拷贝到dirb&lt;&#x2F;p&gt;
&lt;p&gt;$ ls -l !cp:2 #查看dira的内容&lt;&#x2F;p&gt;
&lt;p&gt;ls -l dira&lt;&#x2F;p&gt;
&lt;p&gt;total 0&lt;&#x2F;p&gt;
&lt;p&gt;-rw-rw-r-- 1 hyb hyb 0 Jan 20 16:18 barfile&lt;&#x2F;p&gt;
&lt;p&gt;当上条命令的参数很长，而你需要取用中间的某个参数时，效果就比较明显了。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;执行上一条以关键字开头的命令&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;例如，执行上一条find命令：&lt;&#x2F;p&gt;
&lt;p&gt;$ !find #执行上条以find开头的命令&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;逻辑非的作用&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这个是它最为人所熟悉的作用，例如删除除了cfg结尾以外的所有文件：&lt;&#x2F;p&gt;
&lt;p&gt;rm !(*.cfg)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;小结&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;惊叹号的其他惊叹功能一览：&lt;&#x2F;p&gt;
&lt;p&gt;!!&lt;&#x2F;p&gt;
&lt;p&gt;上一条命令&lt;&#x2F;p&gt;
&lt;p&gt;!$&lt;&#x2F;p&gt;
&lt;p&gt;上一条命令中的最后一个参数&lt;&#x2F;p&gt;
&lt;p&gt;!:-&lt;&#x2F;p&gt;
&lt;p&gt;上一命令除了最后一个参数&lt;&#x2F;p&gt;
&lt;p&gt;!*&lt;&#x2F;p&gt;
&lt;p&gt;上一条命令中的所有参数&lt;&#x2F;p&gt;
&lt;p&gt;!str&lt;&#x2F;p&gt;
&lt;p&gt;最近一条以str开头的命令&lt;&#x2F;p&gt;
&lt;p&gt;!?str?&lt;&#x2F;p&gt;
&lt;p&gt;最近一条包含str的命令&lt;&#x2F;p&gt;
&lt;p&gt;!n&lt;&#x2F;p&gt;
&lt;p&gt;顺数第n条命令&lt;&#x2F;p&gt;
&lt;p&gt;!-n&lt;&#x2F;p&gt;
&lt;p&gt;倒数第n条命令&lt;&#x2F;p&gt;
&lt;p&gt;^old^new&lt;&#x2F;p&gt;
&lt;p&gt;将上一命令中的old替换为new&lt;&#x2F;p&gt;
&lt;p&gt;!!:gs&#x2F;old&#x2F;new&lt;&#x2F;p&gt;
&lt;p&gt;将上一命令中的old替换为new&lt;&#x2F;p&gt;
&lt;p&gt;!scp:gs&#x2F;old&#x2F;new&lt;&#x2F;p&gt;
&lt;p&gt;将上一scp命令中的old替换为new&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;逻辑非的作用&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;这个是它最为人所熟悉的作用，例如删除除了cfg结尾以外的所有文件：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#6c7079;&quot;&gt;&lt;code&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;rm !(*.cfg)  #删除需谨慎&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
</feed>
